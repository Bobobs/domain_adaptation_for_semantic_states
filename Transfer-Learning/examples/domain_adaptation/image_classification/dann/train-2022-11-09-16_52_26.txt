Namespace(arch='resnet50', batch_size=32, bottleneck_dim=256, data='Office31', epochs=1, iters_per_epoch=1000, log='dann', lr=0.01, lr_decay=0.75, lr_gamma=0.001, momentum=0.9, no_hflip=False, no_pool=False, norm_mean=(0.485, 0.456, 0.406), norm_std=(0.229, 0.224, 0.225), per_class_eval=False, phase='train', print_freq=100, ratio=[0.75, 1.3333333333333333], resize_size=224, root='data/office31', scale=[0.08, 1.0], scratch=False, seed=None, source=['A'], target=['W'], trade_off=1.0, train_resizing='default', val_resizing='default', weight_decay=0.001, workers=2)
train_transform:  Compose(
    Compose(
    ResizeImage(size=(256, 256))
    RandomResizedCrop(size=(224, 224), scale=(0.08, 1.0), ratio=(0.75, 1.3333), interpolation=bilinear), antialias=None)
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
val_transform:  Compose(
    Compose(
    ResizeImage(size=(256, 256))
    CenterCrop(size=(224, 224))
)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
=> using model 'resnet50'
/home/gtzelepis/miniconda3/envs/domain_adaptation/lib/python3.8/site-packages/torchvision/models/_utils.py:252: UserWarning: Accessing the model URLs via the internal dictionary of the module is deprecated since 0.13 and may be removed in the future. Please access them via the appropriate Weights Enum instead.
  warnings.warn(
lr: 0.001
Epoch: [0][   0/1000]	Time  3.06 ( 3.06)	Data  0.03 ( 0.03)	Loss   4.29 (  4.29)	Cls Acc 0.0 (0.0)	Domain Acc 48.4 (48.4)
Epoch: [0][ 100/1000]	Time  0.21 ( 0.24)	Data  0.07 ( 0.08)	Loss   0.80 (  1.42)	Cls Acc 84.4 (66.6)	Domain Acc 95.3 (94.6)
Epoch: [0][ 200/1000]	Time  0.21 ( 0.23)	Data  0.07 ( 0.09)	Loss   0.42 (  1.07)	Cls Acc 96.9 (74.8)	Domain Acc 93.8 (95.6)
Epoch: [0][ 300/1000]	Time  0.21 ( 0.23)	Data  0.07 ( 0.09)	Loss   0.80 (  0.98)	Cls Acc 90.6 (78.9)	Domain Acc 82.8 (93.3)
Epoch: [0][ 400/1000]	Time  0.21 ( 0.23)	Data  0.07 ( 0.09)	Loss   0.81 (  0.94)	Cls Acc 90.6 (81.3)	Domain Acc 81.2 (90.3)
Epoch: [0][ 500/1000]	Time  0.21 ( 0.23)	Data  0.07 ( 0.09)	Loss   0.95 (  0.91)	Cls Acc 87.5 (83.1)	Domain Acc 76.6 (88.0)
Epoch: [0][ 600/1000]	Time  0.54 ( 0.23)	Data  0.40 ( 0.09)	Loss   0.60 (  0.89)	Cls Acc 90.6 (84.6)	Domain Acc 84.4 (86.3)
Epoch: [0][ 700/1000]	Time  0.21 ( 0.23)	Data  0.08 ( 0.09)	Loss   1.22 (  0.88)	Cls Acc 87.5 (85.9)	Domain Acc 67.2 (84.1)
Epoch: [0][ 800/1000]	Time  0.21 ( 0.23)	Data  0.08 ( 0.09)	Loss   0.84 (  0.88)	Cls Acc 90.6 (86.9)	Domain Acc 76.6 (82.4)
Epoch: [0][ 900/1000]	Time  0.21 ( 0.23)	Data  0.07 ( 0.09)	Loss   0.72 (  0.87)	Cls Acc 96.9 (87.7)	Domain Acc 68.8 (80.8)
Test: [ 0/25]	Time  0.580 ( 0.580)	Loss 9.0468e-01 (9.0468e-01)	Acc@1  62.50 ( 62.50)
 * Acc@1 80.126
best_acc1 = 80.1
Test: [ 0/25]	Time  0.266 ( 0.266)	Loss 9.0468e-01 (9.0468e-01)	Acc@1  62.50 ( 62.50)
 * Acc@1 80.126
test_acc1 = 80.1
